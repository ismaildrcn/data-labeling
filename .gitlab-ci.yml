default:
  before_script:
    - $env:Path = "C:\Python\" + ";" + "C:\Python\Scripts\" + ";" + $env:Path
    - python --version

stages:
  - build
  - release
  - publish

build:
  stage: build
  tags:
    - windows
  script:
    - python -m pip install --upgrade pip
    - echo Uygulama test ediliyor...
    # - python main.py

release:
  stage: release
  tags:
    - windows
  script:
    - python -m pip install -r requirements.txt
    - python -m pip install pyinstaller
    - python -m PyInstaller main.spec
  artifacts:
    paths:
      - dist/

publish:
  stage: publish
  tags:
    - windows             # Windows runner'ı kullanacağız
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Creating release from tag $CI_COMMIT_TAG"
    - |
      $headers = @{
        "PRIVATE-TOKEN" = "$env:GITLAB_API_TOKEN"
      }
      
      $body = @{
        name = "Release $env:CI_COMMIT_TAG"
        tag_name = "$env:CI_COMMIT_TAG"
        description = "Release created from tag $env:CI_COMMIT_TAG"
        assets = @{
          links = @(
            @{
              name = "Windows Application"
              url = "$env:CI_PROJECT_URL/-/jobs/$env:CI_JOB_ID/artifacts/download"
            }
          )
        }
      } | ConvertTo-Json

      Write-Host "API URL: $env:CI_API_V4_URL"
      Write-Host "Project URL: $env:CI_PROJECT_URL"
      Write-Host "Project ID: $env:CI_PROJECT_ID"
      
      Invoke-RestMethod -Uri "$env:CI_API_V4_URL/projects/$env:CI_PROJECT_ID/releases" `
                       -Method Post `
                       -Headers $headers `
                       -Body $body `
                       -ContentType "application/json"
