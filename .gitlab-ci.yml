default:
  before_script:
    - $env:Path = "C:\Python\" + ";" + "C:\Python\Scripts\" + ";" + $env:Path
    - python --version

stages:
  - prepare
  - install
  - build
  - release

update_pip:
  stage: prepare
  tags:
    - windows
  script:
    - python -m pip install --upgrade pip
    - python -m pip install --upgrade setuptools wheel
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always
    - when: never

install_dependencies:
  stage: install
  tags:
    - windows
  script:
    - python -m pip install -r requirements.txt
    - python -m pip install pyinstaller 
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always
  needs: ["update_pip"]


build_application:
  stage: build
  tags:
    - windows
  script:
    - python -m PyInstaller main.spec

    # asset.json oluşturuluyor
    - |
      $exePath = "/dist/Gorsel%20Veri%20Etiketleme%20-%20CATCH.exe"
      $json = @{
        name       = "Gorsel Veri Etiketleme - CATCH"
        url        = "$env:CI_PROJECT_URL/-/jobs/$env:CI_JOB_ID/artifacts/download"
        filepath   = "/artifact.zip"
        link_type  = "other"
      } | ConvertTo-Json
      $json = $json.Replace('"', '\"')
      Set-Content -Path "asset.json" -Value $json -NoNewline

    # artifact arşivleniyor
    - Compress-Archive -Path dist\* -DestinationPath artifact.zip
  artifacts:
    paths:
      - dist/
      - asset.json
  needs: ["install_dependencies"]



release_job:
  stage: release
  script:
    - echo "Release $env:CI_COMMIT_TAG"
    - New-Item -ItemType Directory -Force -Path "release_artifacts"
    - Copy-Item -Path "dist/*" -Destination "release_artifacts" -Force
    - Copy-Item -Path "asset.json" -Destination "release_artifacts" -Force
    - |
      $link = '[' + (Get-Content asset.json -Raw).Trim() + ']'
      C:\GitLab-Runner\release-cli.exe create `
        --name "Release $env:CI_COMMIT_TAG" `
        --tag-name "$env:CI_COMMIT_TAG" `
        --description "Automated release for $env:CI_COMMIT_TAG" `
        --assets-link "$link" `
        --ref "$env:CI_COMMIT_SHA"
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always
    - when: never
  tags:
    - windows
  artifacts:
    paths:
      - release_artifacts/
  needs: ["build_application"]
