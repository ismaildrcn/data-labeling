default:
  before_script:
    - $env:Path = "C:\Python\" + ";" + "C:\Python\Scripts\" + ";" + $env:Path
    - python --version

stages:
  - build
  - release
  - publish

build:
  stage: build
  tags:
    - windows
  script:
    - python -m pip install --upgrade pip
    - echo Uygulama test ediliyor...
    # - python main.py

release:
  stage: release
  tags:
    - windows
  script:
    - python -m pip install -r requirements.txt
    - python -m pip install pyinstaller
    - python -m PyInstaller main.spec
  artifacts:
    paths:
      - dist/
  

publish:
  stage: publish
  tags:
    - windows
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      $headers = @{
        "PRIVATE-TOKEN" = "$env:GITLAB_API_TOKEN"
      }

      # İstek gövdesini JSON formatında oluşturuyoruz
      $body = @{
        name = "Release $env:CI_COMMIT_TAG"
        tag_name = "$env:CI_COMMIT_TAG"
        description = "Bu sürüm $env:CI_COMMIT_TAG etiketiyle oluşturuldu."
        assets = @{
          links = @(
            @{
              name = "Görsel Veri Etiketleme - CATCH"
              url = "$env:CI_PROJECT_URL/-/jobs/$env:CI_JOB_ID/artifacts/download?file_type=archive"
            }
          )
        }
      } | ConvertTo-Json -Depth 10

      $apiUrl = "$env:CI_API_V4_URL/projects/$env:CI_PROJECT_ID/releases"

      # API isteğini gönderiyoruz ve hata detaylarını yazdırıyoruz
      Write-Host "Sending API request to: $apiUrl"
      Write-Host "Request Body: $body"

      try {
        $response = Invoke-RestMethod -Uri $apiUrl -Method Post -Headers $headers -Body $body -ContentType "application/json"
        Write-Host "Release created successfully"
      }
      catch {
        Write-Host "Release creation failed!"
        Write-Host "Error Message: $($_.Exception.Message)"
        Write-Host "Response Status Code: $($_.Exception.Response.StatusCode.Value__)"
        Write-Host "Response Status Description: $($_.Exception.Response.StatusDescription)"
        Write-Host "Response Body: $($_.Exception.Response.GetResponseStream())"
        throw
      }